// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace TestClient.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// EchoTypes
    /// </summary>
    public partial class EchoTypes
    {
        /// <summary>
        /// Initializes a new instance of the EchoTypes class.
        /// </summary>
        public EchoTypes() { }

        /// <summary>
        /// Initializes a new instance of the EchoTypes class.
        /// </summary>
        public EchoTypes(byte[] byteProperty = default(byte[]), int? shortProperty = default(int?), int? intProperty = default(int?), long? longProperty = default(long?), int? uShortProperty = default(int?), int? uIntProperty = default(int?), long? uLongProperty = default(long?), double? floatProperty = default(double?), double? doubleProperty = default(double?), double? decimalProperty = default(double?), string stringProperty = default(string), System.DateTime? dateTime = default(System.DateTime?), string timeSpan = default(string), string dateTimeOffset = default(string), string guid = default(string), string charProperty = default(string))
        {
            ByteProperty = byteProperty;
            ShortProperty = shortProperty;
            IntProperty = intProperty;
            LongProperty = longProperty;
            UShortProperty = uShortProperty;
            UIntProperty = uIntProperty;
            ULongProperty = uLongProperty;
            FloatProperty = floatProperty;
            DoubleProperty = doubleProperty;
            DecimalProperty = decimalProperty;
            StringProperty = stringProperty;
            DateTime = dateTime;
            TimeSpan = timeSpan;
            DateTimeOffset = dateTimeOffset;
            Guid = guid;
            CharProperty = charProperty;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Byte")]
        public byte[] ByteProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Short")]
        public int? ShortProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Int")]
        public int? IntProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Long")]
        public long? LongProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UShort")]
        public int? UShortProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UInt")]
        public int? UIntProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ULong")]
        public long? ULongProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Float")]
        public double? FloatProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Double")]
        public double? DoubleProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Decimal")]
        public double? DecimalProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "String")]
        public string StringProperty { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DateTime")]
        public System.DateTime? DateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TimeSpan")]
        public string TimeSpan { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DateTimeOffset")]
        public string DateTimeOffset { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Guid")]
        public string Guid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Char")]
        public string CharProperty { get; set; }

    }
}
