// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace TestClient
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for DrawImageOperations.
    /// </summary>
    public static partial class DrawImageOperationsExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// </param>
            /// <param name='format'>
            /// </param>
            /// <param name='width'>
            /// </param>
            /// <param name='height'>
            /// </param>
            /// <param name='fontSize'>
            /// </param>
            /// <param name='foreground'>
            /// </param>
            /// <param name='background'>
            /// </param>
            /// <param name='format1'>
            /// Specifies response output format
            /// </param>
            public static string Get(this IDrawImageOperations operations, string name, string format = default(string), int? width = default(int?), int? height = default(int?), int? fontSize = default(int?), string foreground = default(string), string background = default(string), string format1 = "json")
            {
                return operations.GetAsync(name, format, width, height, fontSize, foreground, background, format1).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// </param>
            /// <param name='format'>
            /// </param>
            /// <param name='width'>
            /// </param>
            /// <param name='height'>
            /// </param>
            /// <param name='fontSize'>
            /// </param>
            /// <param name='foreground'>
            /// </param>
            /// <param name='background'>
            /// </param>
            /// <param name='format1'>
            /// Specifies response output format
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> GetAsync(this IDrawImageOperations operations, string name, string format = default(string), int? width = default(int?), int? height = default(int?), int? fontSize = default(int?), string foreground = default(string), string background = default(string), string format1 = "json", CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(name, format, width, height, fontSize, foreground, background, format1, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// </param>
            /// <param name='format'>
            /// </param>
            /// <param name='width'>
            /// </param>
            /// <param name='height'>
            /// </param>
            /// <param name='fontSize'>
            /// </param>
            /// <param name='foreground'>
            /// </param>
            /// <param name='background'>
            /// </param>
            /// <param name='format1'>
            /// Specifies response output format
            /// </param>
            public static string Create(this IDrawImageOperations operations, string name, string format = default(string), int? width = default(int?), int? height = default(int?), int? fontSize = default(int?), string foreground = default(string), string background = default(string), string format1 = "json")
            {
                return operations.CreateAsync(name, format, width, height, fontSize, foreground, background, format1).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// </param>
            /// <param name='format'>
            /// </param>
            /// <param name='width'>
            /// </param>
            /// <param name='height'>
            /// </param>
            /// <param name='fontSize'>
            /// </param>
            /// <param name='foreground'>
            /// </param>
            /// <param name='background'>
            /// </param>
            /// <param name='format1'>
            /// Specifies response output format
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> CreateAsync(this IDrawImageOperations operations, string name, string format = default(string), int? width = default(int?), int? height = default(int?), int? fontSize = default(int?), string foreground = default(string), string background = default(string), string format1 = "json", CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(name, format, width, height, fontSize, foreground, background, format1, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// </param>
            /// <param name='format'>
            /// </param>
            /// <param name='width'>
            /// </param>
            /// <param name='height'>
            /// </param>
            /// <param name='fontSize'>
            /// </param>
            /// <param name='foreground'>
            /// </param>
            /// <param name='background'>
            /// </param>
            /// <param name='format1'>
            /// Specifies response output format
            /// </param>
            public static string Post(this IDrawImageOperations operations, string name, string format = default(string), int? width = default(int?), int? height = default(int?), int? fontSize = default(int?), string foreground = default(string), string background = default(string), string format1 = "json")
            {
                return operations.PostAsync(name, format, width, height, fontSize, foreground, background, format1).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// </param>
            /// <param name='format'>
            /// </param>
            /// <param name='width'>
            /// </param>
            /// <param name='height'>
            /// </param>
            /// <param name='fontSize'>
            /// </param>
            /// <param name='foreground'>
            /// </param>
            /// <param name='background'>
            /// </param>
            /// <param name='format1'>
            /// Specifies response output format
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> PostAsync(this IDrawImageOperations operations, string name, string format = default(string), int? width = default(int?), int? height = default(int?), int? fontSize = default(int?), string foreground = default(string), string background = default(string), string format1 = "json", CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PostWithHttpMessagesAsync(name, format, width, height, fontSize, foreground, background, format1, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// </param>
            /// <param name='format'>
            /// </param>
            /// <param name='width'>
            /// </param>
            /// <param name='height'>
            /// </param>
            /// <param name='fontSize'>
            /// </param>
            /// <param name='foreground'>
            /// </param>
            /// <param name='background'>
            /// </param>
            /// <param name='format1'>
            /// Specifies response output format
            /// </param>
            public static string Delete(this IDrawImageOperations operations, string name, string format = default(string), int? width = default(int?), int? height = default(int?), int? fontSize = default(int?), string foreground = default(string), string background = default(string), string format1 = "json")
            {
                return operations.DeleteAsync(name, format, width, height, fontSize, foreground, background, format1).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// </param>
            /// <param name='format'>
            /// </param>
            /// <param name='width'>
            /// </param>
            /// <param name='height'>
            /// </param>
            /// <param name='fontSize'>
            /// </param>
            /// <param name='foreground'>
            /// </param>
            /// <param name='background'>
            /// </param>
            /// <param name='format1'>
            /// Specifies response output format
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<string> DeleteAsync(this IDrawImageOperations operations, string name, string format = default(string), int? width = default(int?), int? height = default(int?), int? fontSize = default(int?), string foreground = default(string), string background = default(string), string format1 = "json", CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteWithHttpMessagesAsync(name, format, width, height, fontSize, foreground, background, format1, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
