// Code generated by Microsoft (R) AutoRest Code Generator 1.0.1.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace TestClient
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for EchoCollectionsOperations.
    /// </summary>
    public static partial class EchoCollectionsOperationsExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='stringList'>
            /// </param>
            /// <param name='stringArray'>
            /// </param>
            /// <param name='stringMap'>
            /// </param>
            /// <param name='intStringMap'>
            /// </param>
            /// <param name='format'>
            /// Specifies response output format
            /// </param>
            public static EchoCollections Get(this IEchoCollectionsOperations operations, IList<string> stringList = default(IList<string>), IList<string> stringArray = default(IList<string>), object stringMap = default(object), object intStringMap = default(object), string format = "json")
            {
                return operations.GetAsync(stringList, stringArray, stringMap, intStringMap, format).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='stringList'>
            /// </param>
            /// <param name='stringArray'>
            /// </param>
            /// <param name='stringMap'>
            /// </param>
            /// <param name='intStringMap'>
            /// </param>
            /// <param name='format'>
            /// Specifies response output format
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<EchoCollections> GetAsync(this IEchoCollectionsOperations operations, IList<string> stringList = default(IList<string>), IList<string> stringArray = default(IList<string>), object stringMap = default(object), object intStringMap = default(object), string format = "json", CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetWithHttpMessagesAsync(stringList, stringArray, stringMap, intStringMap, format, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='stringList'>
            /// </param>
            /// <param name='stringArray'>
            /// </param>
            /// <param name='stringMap'>
            /// </param>
            /// <param name='intStringMap'>
            /// </param>
            /// <param name='format'>
            /// Specifies response output format
            /// </param>
            public static EchoCollections Create(this IEchoCollectionsOperations operations, IList<string> stringList = default(IList<string>), IList<string> stringArray = default(IList<string>), object stringMap = default(object), object intStringMap = default(object), string format = "json")
            {
                return operations.CreateAsync(stringList, stringArray, stringMap, intStringMap, format).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='stringList'>
            /// </param>
            /// <param name='stringArray'>
            /// </param>
            /// <param name='stringMap'>
            /// </param>
            /// <param name='intStringMap'>
            /// </param>
            /// <param name='format'>
            /// Specifies response output format
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<EchoCollections> CreateAsync(this IEchoCollectionsOperations operations, IList<string> stringList = default(IList<string>), IList<string> stringArray = default(IList<string>), object stringMap = default(object), object intStringMap = default(object), string format = "json", CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateWithHttpMessagesAsync(stringList, stringArray, stringMap, intStringMap, format, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='stringList'>
            /// </param>
            /// <param name='stringArray'>
            /// </param>
            /// <param name='stringMap'>
            /// </param>
            /// <param name='intStringMap'>
            /// </param>
            /// <param name='format'>
            /// Specifies response output format
            /// </param>
            public static EchoCollections Post(this IEchoCollectionsOperations operations, IList<string> stringList = default(IList<string>), IList<string> stringArray = default(IList<string>), object stringMap = default(object), object intStringMap = default(object), string format = "json")
            {
                return operations.PostAsync(stringList, stringArray, stringMap, intStringMap, format).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='stringList'>
            /// </param>
            /// <param name='stringArray'>
            /// </param>
            /// <param name='stringMap'>
            /// </param>
            /// <param name='intStringMap'>
            /// </param>
            /// <param name='format'>
            /// Specifies response output format
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<EchoCollections> PostAsync(this IEchoCollectionsOperations operations, IList<string> stringList = default(IList<string>), IList<string> stringArray = default(IList<string>), object stringMap = default(object), object intStringMap = default(object), string format = "json", CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.PostWithHttpMessagesAsync(stringList, stringArray, stringMap, intStringMap, format, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='stringList'>
            /// </param>
            /// <param name='stringArray'>
            /// </param>
            /// <param name='stringMap'>
            /// </param>
            /// <param name='intStringMap'>
            /// </param>
            /// <param name='format'>
            /// Specifies response output format
            /// </param>
            public static EchoCollections Delete(this IEchoCollectionsOperations operations, IList<string> stringList = default(IList<string>), IList<string> stringArray = default(IList<string>), object stringMap = default(object), object intStringMap = default(object), string format = "json")
            {
                return operations.DeleteAsync(stringList, stringArray, stringMap, intStringMap, format).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='stringList'>
            /// </param>
            /// <param name='stringArray'>
            /// </param>
            /// <param name='stringMap'>
            /// </param>
            /// <param name='intStringMap'>
            /// </param>
            /// <param name='format'>
            /// Specifies response output format
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<EchoCollections> DeleteAsync(this IEchoCollectionsOperations operations, IList<string> stringList = default(IList<string>), IList<string> stringArray = default(IList<string>), object stringMap = default(object), object intStringMap = default(object), string format = "json", CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteWithHttpMessagesAsync(stringList, stringArray, stringMap, intStringMap, format, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
